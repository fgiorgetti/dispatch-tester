##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License
##

# See the qdrouterd.conf (5) manual page for information about this
# file's format and options.

container {
    workerThreads: 2
    containerName: Qpid.Dispatch.Router.A
    # YOU MUST CHANGE THIS TO MATCH YOUR PATH IF USING A SASL CONFIG NOT IN THE DEFAULT PATH
    # saslConfigPath: /home/kgiusti/work/dispatch-tester/examples/3-router/sasl2
    # ONLY CHANGE THE CONFIG NAME IF YOUR SASL FILE IS NOT "qdrouterd.conf", OTHERWISE USE THIS:
    # saslConfigName: qdrouterd
}

router {
    mode: interior
    routerId: Router.A
}

# This is the public interface for clients to connect to
#
listener {
    addr: 0.0.0.0
    port: amqp
    authenticatePeer: no
}

# This is the mesh-internal interface that connects to RouterB:
#
connector {
    role: inter-router
    addr: 127.0.0.1
    port: 20200
}

# This is the mesh-internal interface that connects to RouterC:
#
connector {
    role: inter-router
    addr: 127.0.0.1
    port: 20300
}

log {
    module: DEFAULT
    enable: info+
}

address {
    prefix: closest
    distribution: closest
}

address {
    prefix: multicast
    distribution: multicast
}

address {
    prefix: unicast
    distribution: closest
}

address {
    prefix: exclusive
    distribution: closest
}

address {
    prefix: broadcast
    distribution: multicast
}

